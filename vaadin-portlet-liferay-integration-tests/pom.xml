<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>liferay-portlet-deployer</module>
        <module>vaadin-portlet-liferay-it-shared</module>
        <module>liferay-tests-generic</module>
        <module>liferay-portlet30</module>
    </modules>
    <parent>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-portlet-parent</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>
    <artifactId>vaadin-portlet-liferay-integration-tests</artifactId>
    <name>Liferay Integration Tests</name>
    <packaging>pom</packaging>

    <properties>
        <liferay.version>7.4.3.5-ga5</liferay.version>
        <tomcat.version>9.0.56</tomcat.version>
        <liferay.home.directory>
            ${project.build.directory}/liferay-ce-portal-${liferay.version}
        </liferay.home.directory>
        <tomcat.home.directory>
            ${liferay.home.directory}/tomcat-${tomcat.version}
        </tomcat.home.directory>
        <bundle.download.directory>${project.build.directory}
        </bundle.download.directory>
        <cargo.debug.port>5005</cargo.debug.port>
        <cargo.timeout>120000</cargo.timeout>

        <javax.validation.version>2.0.0.Final</javax.validation.version>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8
        </project.reporting.outputEncoding>

        <vaadin.productionMode>true</vaadin.productionMode>

        <failOnMissingWebXml>false</failOnMissingWebXml>
        <component.version>${vaadin.version}</component.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-portlet</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Test dependency from components -->
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-data</artifactId>
                <version>${flow.version}</version>
            </dependency>

            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-testbench-core</artifactId>
                <version>${testbench.version}</version>
                <scope>test</scope>
            </dependency>


            <!-- Added to provide logging output as Flow uses -->
            <!-- the unbound SLF4J no-operation (NOP) logger implementation -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.7.28</version>
            </dependency>

            <!-- Portlet API -->
            <dependency>
                <groupId>javax.portlet</groupId>
                <artifactId>portlet-api</artifactId>
                <version>3.0.0</version>
                <scope>provided</scope>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-server-production-mode</artifactId>
                <version>${flow.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-lumo-theme</artifactId>
                <version>${flow.version}</version>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>3.0.1</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven3-plugin</artifactId>
                    <version>1.9.10</version>
                    <configuration>
                        <container>
                            <containerId>tomcat9x</containerId>
                            <home>${tomcat.home.directory}</home>
                            <timeout>${cargo.timeout}</timeout>
                        </container>
                        <configuration>
                            <type>existing</type>
                            <home>${tomcat.home.directory}</home>
                            <properties>
                                <cargo.start.jvmargs>
                                    -Xdebug
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${cargo.debug.port}
                                    -Xnoagent
                                    -Dfile.encoding=UTF-8
                                    -Djava.locale.providers=JRE,COMPAT,CLDR
                                    -Djava.net.preferIPv4Stack=true
                                    -Duser.timezone=GMT
                                    -Xms2560m
                                    -Xmx2560m
                                    -XX:MaxNewSize=1536m
                                    -XX:MaxMetaspaceSize=768m
                                    -XX:MetaspaceSize=768m
                                    -XX:NewSize=1536m
                                    -XX:SurvivorRatio=7
                                    -Djava.compiler=NONE
                                    -Dvaadin.heartbeatInterval=15
                                    -Dvaadin.portlet.static.resources.mapping=/o/vaadin-portlet-static/
                                </cargo.start.jvmargs>
                            </properties>
                        </configuration>

                        <!-- Set an empty deployer so that cargo does not try to add the
                        current project's artifact to the container (as this was already
                        done by maven) -->
                        <deployer/>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-maven-plugin</artifactId>
                    <version>${flow.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-frontend</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                    <executions>
                        <execution>
                            <id>portlet-war</id>
                            <goals>
                                <goal>war</goal>
                            </goals>
                            <configuration>
                                <packagingExcludes>
                                    WEB-INF/classes/META-INF/VAADIN/build/**,VAADIN/
                                </packagingExcludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>static-files</id>
                            <goals>
                                <goal>war</goal>
                            </goals>
                            <configuration>
                                <warName>vaadin-portlet-static</warName>
                                <packagingIncludes>
                                    WEB-INF/lib/flow-client*.jar,WEB-INF/lib/vaadin-portlet*.jar,VAADIN/
                                </packagingIncludes>

                                <webResources>
                                    <resource>
                                        <!-- this is relative to the pom.xml directory -->
                                        <directory>target/classes/META-INF/VAADIN/webapp/</directory>
                                        <includes>
                                            <include>**</include>
                                        </includes>
                                        <excludes>
                                            <exclude>VAADIN/config/**</exclude>
                                        </excludes>
                                    </resource>
                                </webResources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>test</id>
            <activation>
                <property>
                    <name>!skipTests</name>
                </property>
                <file>
                    <exists>${basedir}/src/main/webapp</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-portal</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-portal</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>wait-for-liferay-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target name="wait-liferay">
                                        <echo>Wait for Liferay to be fully ready...</echo>
                                        <sleep seconds="15"/>
                                        <!-- Warm up liferay with a first call -->
                                        <get src="http://localhost:8080/"
                                             ignoreerrors="true"
                                             dest="${project.build.directory}/liferay_home.html"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>production</id>
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>flow-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-frontend</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>autosetup</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>download-files</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <target name="setup-liferay">
                                            <get src="https://github.com/liferay/liferay-portal/releases/download/${liferay.version}/liferay-ce-portal-tomcat-${liferay.version}-20211221192828235.tar.gz"
                                                 dest="${bundle.download.directory}/liferay.tar.gz"
                                                 verbose="false"
                                                 usetimestamp="true"/>
                                            <untar src="${bundle.download.directory}/liferay.tar.gz"
                                                   compression="gzip"
                                                   dest="${project.build.directory}"/>
                                            <copy file="${project.basedir}/../liferay-portlet-deployer/target/liferay-portlet-deployer.war"
                                                  todir="${liferay.home.directory}/osgi/war"/>
                                            <copy file="${project.build.directory}/${project.artifactId}.war"
                                                  todir="${liferay.home.directory}/osgi/war"/>
                                            <copy file="${project.build.directory}/vaadin-portlet-static.war"
                                                  todir="${liferay.home.directory}/osgi/war"/>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>3.2.0</version>
                            <executions>
                                <execution>
                                    <id>setup-liferay-env</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>
                                            ${liferay.home.directory}
                                        </outputDirectory>
                                        <propertiesEncoding>ISO-8859-1
                                        </propertiesEncoding>
                                        <resources>
                                            <resource>
                                                <directory>
                                                    ${project.basedir}/src/test/liferay
                                                </directory>
                                                <filtering>true</filtering>
                                                <includes>
                                                    <include>
                                                        portal-setup-wizard.properties
                                                    </include>
                                                </includes>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
