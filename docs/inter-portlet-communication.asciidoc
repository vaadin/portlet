= Inter-portlet Communication

Inter-portlet communication (IPC) is collection of methods which allow portlets to pass information from one to another.
This allows the separate portlets to work in cohort to provide a cohesive whole.

In Portlet 1.0 specification, portlet could only pass information via public request parameters; one portlet would create a request url with request parameters that held the data.
When the request was made, the handling portlet would receive those parameters and thus the data via the request.

Portlet 2.0 specification introduced events; an event is defined in the portlet.xml with the associated parameter types.
A portlet may dispatch an event, an portlets which have registered to handle events with certain names will process the dispatched event.
This form of IPC happens entirely on the server-side.

Portlet 3.0 specification brings `PortletHub` - a client-side API for portlets to use for various tasks.
One aspect of this is firing client-side events and creating action requests to the server-side portlets.

Vaadin Portlets allows the developer to leverage all of these different methods for using IPC and provides helper APIs for common use-cases.

== Vaadin Portlet IPC with 3.0 Specification

When Vaadin Portlets are ran on a portal which supports Portlet 3.0 specification, Vaadin Portlet automatically adds `PortletHub` support on the client-side.
The standard IPC for Vaadin Portlets leverages `PortletHub` to provide the developer with seamless integration of the client-side and server-side events.

You can use `VaadinPortlet` to dispatch events from your portlet view class.
These events are then delivered to the `PortletHub` which handles delivering the events forward.
There are two types of events that can be dispatched this way: Vaadin Portlet IPC events and normal client-side events.
For the former, Vaadin Portlet support has automatically registered delivery mechanisms in place and you can register event handlers in the Java code for other portlets.
The latter fires a normal `PortletHub` client-side event with the given event name and payload.

=== Firing and Receiving Vaadin Portlet IPC Events

Given two portlet views `FiringPortletView` and `ReceivingPortletView` we
setup our Vaadin Portlet IPC as follows:

.FiringPortletView.java
[source,java]
----
public class FiringPortletView extends Div implements PortletModeHandler {

    public FiringPortletView() {
        Button button = new Button("Fire event", event -> {
            VaadinPortlet.getCurrent().hub()
                .sendIPCEvent("my-ipc-event", Collections.emptyMap());
        });

    }

    @Override
    public void onPortletModeChange(PortletModeChangeEvent event) {
        // ... react to event
    }
}
----

.ReceivingPortletView.java
[source,java]
----
public class ReceivingPortletView extends Div
        implements PortletModeHandler, IPCEventHandler {

    @Override
    public void handleIPCEvent(String eventName, Map<String, String> params) {
        if ("my-ipc-event".equals(eventName)) {
            Notification.show("Received " + eventName + " event!");
        }
    }

    @Override
    public void onPortletModeChange(PortletModeChangeEvent event) {
        // ... react to event
    }
}
----

In `FiringPortletView.java` we use the method `VaadinPortlet::fireIPCEvent(...)`
to fire our client-side event.
This method formats the fired event so that an automatically registered client-side handlers from other Vaadin Portlets will receive the event and dispatch it to their server-side counter parts.

The benefit to using the client-side event dispatching is that other portlets may receive these events on the client-side, if they follow the naming convention for such events, firing these events does not require the code to be executed inside a portlet request, and finally these events do not need to be registered into the portlet.xml or defined using the 3.0 annotations.

[NOTE]
If you wish to register your own listeners to `PortletHub` for the automatically handled Vaadin Portlet IPC events, register a handler to receive all events under the regex "vaadin-portlet-ipc/.*".

=== Dispatching Client-Side Events with Vaadin Portlet

Something about `VaadinPortlet.getCurrent().hub().fireClientEvent(String,Map<String,String>)`
